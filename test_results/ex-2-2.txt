Going to test server from github.com/adrienjoly/cours-nodejs-exercise-solutions.git...

Remove previous student-code directory...

Clone student's repository (github.com/adrienjoly/cours-nodejs-exercise-solutions.git, branch: ex-2-2)...
Cloning into './student-code'...
Switched to a new branch 'ex-2-2'
Branch 'ex-2-2' set up to track remote branch 'ex-2-2' from 'origin'.

Stop and remove previous Docker containers...

Generate Dockerfile from ./student-code...

Build Dockerfile...

Run Dockerfile...

Run test suite against container...

  - connect to mongodb from container
  - deuxieme affichage: une date
  - troisieme affichage: deux dates
  - should not have a callback
  - gestion erreurs ?
    Lecture du code source fourni
    ℹ const MongoClient = require('mongodb').MongoClient;
      const assert = require('assert');

      (async function() {
        // Connection URL
        const url = 'mongodb://localhost:27017/test';
        // Database Name
        const dbName = 'test';
        const client = new MongoClient(url);

        try {
          // Use connect method to connect to the Server
          await client.connect();
          console.log("Connected correctly to server");

          const db = client.db(dbName);

          // Get the collection
          const col = db.collection('dates');

          // Insert multiple documents
          const r = await col.insertMany([ { date: new Date() } ]);

          // Get first two documents that match the query
          const docs = await col.find({}).toArray();
          console.log({ docs });

        } catch (err) {
          console.log(err.stack);
        }

        client.close();
      })();

  ✔ dates.js utilise seulement await pour récupérer les valeurs promises
npm notice created a lockfile as package-lock.json. You should commit this file.

added 65 packages from 45 contributors in


(node:161) DeprecationWarning: current Server Discovery and Monitoring engine is deprecated, and will be removed in a future version. To use the new Server Discover and Monitoring engine, pass option { useUnifiedTopology: true } to the MongoClient constructor.

  ✖ affichage initial: tableau vide 

  1 test failed
  1 test skipped
  4 tests todo

  affichage initial: tableau vide

  /Users/adrienjoly/dev/adrienjoly/cours-nodejs-exercise-testers/test-ex-2-1.js:54

   53:   const result = await t.context.runStudentCode(mongodbUri);
   54:   t.regex(result, /\[\]/);                                  
   55: });                                                         

  Value must match expression:

  `Connected correctly to server␊
  { docs:␊
     [ { date: 2020-04-05T16:02:07.134Z,␊
         _id: 5e8a00ff80fe4d009cf25985 } ] }␊
  `

  Regular expression:

  /\[\]/

