
Stop and remove previous Docker containers...

Generate Dockerfile from ./student-code...

Build Dockerfile...

Run Dockerfile...

Run test suite against container...

    Lecture du code source fourni
    ℹ const MongoClient = require('mongodb').MongoClient;
      const assert = require('assert');

      (async function() {
        // Connection URL
        const url = 'mongodb://localhost:27017/test';
        // Database Name
        const dbName = 'test';
        const client = new MongoClient(url);

        try {
          // Use connect method to connect to the Server
          await client.connect();
          console.log("Connected correctly to server");

          const db = client.db(dbName);

          // Get the collection
          const col = db.collection('dates');

          // Insert multiple documents
          const r = await col.insertMany([ { date: new Date() } ]);

          // Get first two documents that match the query
          const docs = await col.find({}).toArray();
          console.log({ docs });

        } catch (err) {
          console.log(err.stack);
        }

        client.close();
      })();

  ✔ dates.js utilise seulement await pour récupérer les valeurs promises
install in-memory mongodb server in container...
npm notice created a lockfile as package-lock.json. You should commit this file.
+ mongodb-fs@0.1.0
added 10 packages from 10 contributors in 4.683s

run mongo server in container...
connection string: mongodb://localhost:27027

install mongodb client in container...
run client code in container...
(node:148) DeprecationWarning: current Server Discovery and Monitoring engine is deprecated, and will be removed in a future version. To use the new Server Discover and Monitoring engine, pass option { useUnifiedTopology: true } to the MongoClient constructor.
Connected successfully to server

  ✔ connect to mongodb from container (9.6s)

  2 tests passed


Stop and remove Docker containers...
