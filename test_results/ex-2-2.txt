
    Lecture du code source fourni
    ℹ const MongoClient = require('mongodb').MongoClient;
      const assert = require('assert');

      (async function() {
        // Connection URL
        const url = 'mongodb://localhost:27017/test';
        // Database Name
        const dbName = 'test';
        const client = new MongoClient(url);

        try {
          // Use connect method to connect to the Server
          await client.connect();
          console.log("Connected correctly to server");

          const db = client.db(dbName);

          // Get the collection
          const col = db.collection('dates');

          // Insert multiple documents
          const r = await col.insertMany([ { date: new Date() } ]);

          // Get first two documents that match the query
          const docs = await col.find({}).toArray();
          console.log({ docs });

        } catch (err) {
          console.log(err.stack);
        }

        client.close();
      })();

  ✔ dates.js utilise seulement await pour récupérer les valeurs promises
connection string: mongodb://localhost:27017/ffc9f1f8-16ed-4d4c-ade6-d055d33f09c0
(node:4279) DeprecationWarning: current Server Discovery and Monitoring engine is deprecated, and will be removed in a future version. To use the new Server Discover and Monitoring engine, pass option { useUnifiedTopology: true } to the MongoClient constructor.
{ MongoNetworkError: failed to connect to server [localhost:27017] on first connect [MongoNetworkError: connect ECONNREFUSED 127.0.0.1:27017]
    at Pool.<anonymous> (/usr/src/app/node_modules/mongodb/lib/core/topologies/server.js:438:11)
    at Pool.emit (events.js:198:13)
    at createConnection (/usr/src/app/node_modules/mongodb/lib/core/connection/pool.js:561:14)
    at connect (/usr/src/app/node_modules/mongodb/lib/core/connection/pool.js:994:11)
    at makeConnection (/usr/src/app/node_modules/mongodb/lib/core/connection/connect.js:31:7)
    at callback (/usr/src/app/node_modules/mongodb/lib/core/connection/connect.js:264:5)
    at Socket.err (/usr/src/app/node_modules/mongodb/lib/core/connection/connect.js:294:7)
    at Object.onceWrapper (events.js:286:20)
    at Socket.emit (events.js:198:13)
    at emitErrorNT (internal/streams/destroy.js:91:8)
  name: 'MongoNetworkError',
  [Symbol(mongoErrorContextSymbol)]: {} }
/usr/src/app/node_modules/mongodb/lib/utils.js:725
          throw error;
          ^

TypeError: Cannot read property 'db' of undefined
    at [eval]:1:235
    at /usr/src/app/node_modules/mongodb/lib/utils.js:722:9
    at err (/usr/src/app/node_modules/mongodb/lib/mongo_client.js:216:23)
    at connectCallback (/usr/src/app/node_modules/mongodb/lib/operations/connect.js:350:5)
    at server.connect (/usr/src/app/node_modules/mongodb/lib/operations/connect.js:417:14)
    at Server.<anonymous> (/usr/src/app/node_modules/mongodb/lib/topologies/server.js:230:11)
    at Object.onceWrapper (events.js:286:20)
    at Server.emit (events.js:198:13)
    at Pool.<anonymous> (/usr/src/app/node_modules/mongodb/lib/core/topologies/server.js:436:21)
    at Pool.emit (events.js:198:13)
Command failed: docker exec my-running-app sh -c "MONGODB_URI=\"mongodb://localhost:27017/ffc9f1f8-16ed-4d4c-ade6-d055d33f09c0\" node -e \"   const MongoClient = require('mongodb').MongoClient;   MongoClient.connect(process.env.MONGODB_URI, function(err, client) {     if (err) console.error(err);     console.log('Connected successfully to server');     const db = client.db('test');     client.close();   });   \""
(node:4279) DeprecationWarning: current Server Discovery and Monitoring engine is deprecated, and will be removed in a future version. To use the new Server Discover and Monitoring engine, pass option { useUnifiedTopology: true } to the MongoClient constructor.
{ MongoNetworkError: failed to connect to server [localhost:27017] on first connect [MongoNetworkError: connect ECONNREFUSED 127.0.0.1:27017]
    at Pool.<anonymous> (/usr/src/app/node_modules/mongodb/lib/core/topologies/server.js:438:11)
    at Pool.emit (events.js:198:13)
    at createConnection (/usr/src/app/node_modules/mongodb/lib/core/connection/pool.js:561:14)
    at connect (/usr/src/app/node_modules/mongodb/lib/core/connection/pool.js:994:11)
    at makeConnection (/usr/src/app/node_modules/mongodb/lib/core/connection/connect.js:31:7)
    at callback (/usr/src/app/node_modules/mongodb/lib/core/connection/connect.js:264:5)
    at Socket.err (/usr/src/app/node_modules/mongodb/lib/core/connection/connect.js:294:7)
    at Object.onceWrapper (events.js:286:20)
    at Socket.emit (events.js:198:13)
    at emitErrorNT (internal/streams/destroy.js:91:8)
  name: 'MongoNetworkError',
  [Symbol(mongoErrorContextSymbol)]: {} }
/usr/src/app/node_modules/mongodb/lib/utils.js:725
          throw error;
          ^

TypeError: Cannot read property 'db' of undefined
    at [eval]:1:235
    at /usr/src/app/node_modules/mongodb/lib/utils.js:722:9
    at err (/usr/src/app/node_modules/mongodb/lib/mongo_client.js:216:23)
    at connectCallback (/usr/src/app/node_modules/mongodb/lib/operations/connect.js:350:5)
    at server.connect (/usr/src/app/node_modules/mongodb/lib/operations/connect.js:417:14)
    at Server.<anonymous> (/usr/src/app/node_modules/mongodb/lib/topologies/server.js:230:11)
    at Object.onceWrapper (events.js:286:20)
    at Server.emit (events.js:198:13)
    at Pool.<anonymous> (/usr/src/app/node_modules/mongodb/lib/core/topologies/server.js:436:21)
    at Pool.emit (events.js:198:13)

null
  ✖ connect to mongodb from container Test finished without running any assertions

  1 test failed

  connect to mongodb from container


  Error: Test finished without running any assertions

